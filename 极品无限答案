1.内存泄露，非法使用内存
2.24
3.A  D   C
4. 
{
 	int a;   --00 01 02 03
 	short b; --04 05
 	short c; --06 07
 	short d; --08 09 --cd 看成一个，也就是存储的时候
 	short e; --10 11
  	short f; --12 13	
}
--14 
int a   00 03
short b; 04 05
int c;  08 09 10 11
short e; 12 13
short f; 14 15

00 01 02 03 
04 05 06 07 
08 09 10 11
12 13


5.
（1）删除不必要的#include，使用前向声明
（2）删除不必要的一大堆私有成员变量
（3）删除不必要的类之间的继承
（4）不需要修改的代码做成静态库或者动态库

6.
F5就是继续运行，不在中断，直到遇到断点。
F10是逐过程运行，也是一次运行一条语句，但遇到子函数调用时不进入。
F11是逐语句，和F10的区别是，当遇到子函数调用时，也会进入子函数进行单步调试。

7.插入排序 O(n2)
  快速排序 O(nlogn) 
  归并排序 O(nlogn) 

-- 5 1 2 3 4 7 6 8
-- 1 5 2 3 4 7 6 8
-- 1 2 3 5 4 6 7 8
-- 1 2 3 4 5 6 7 8

-- 5 1 2 3 4 7 6 8
key = 5 
  left = 7  right = 4
  a[right] = a[left] 
  
8.makefile关系到了整个工程的编译规则。一个工程中的源文件不计数，其按类型、功能、模块分别放在若干个目录中，makefile定义了一系列的规则来指定，哪些文件需要先编译，哪些文件需要后编译，哪些文件需要重新编译，甚至于进行更复杂的功能操作，因为makefile就像一个Shell脚本一样，其中也可以执行操作系统的命令
9.通过nm命令  nm  a.out
10.const有类型检查
11.顺序结构 选择结构 循环结构
12.避免头文件重复包含

二
1.
    int maxSubArray(int *A,int n)  
    {  
        cursum = A[0];  
        maxsum = A[0];  
        for i=1 to n-1 do  
     /*当我们加上一个正数时，和会增加；当我们加上一个负数时，和会减少。如果当前得到的和是个负数，那么这个和在接下来的累加中应该抛弃并重新清零，不然的话这个负数将会减少接下来的和。*/  
            if cursum<0 do     
                cursum = 0;  
            cursum += A[i];  
            if cursum>maxsum do  
                maxsum = cursum;  
        return maxsum;  
    }  
2.strdup
  原型：extern char *strdup(char *s);    
  用法：#include <string.h>
  功能：复制字符串s
  说明：返回指向被复制的字符串的指针，所需空间由malloc()分配且可以由free()释放。

